#include "token/token.h"

using namespace avs8086::token;

const QStringList Token::sm_registers = {
    "AL", "CL", "DL", "BL", "AH", "CH", "DH", "BH", // 0-7
    "AX", "CX", "DX", "BX", "SP", "BP", "SI", "DI", // 8-15
    "ES", "CS", "SS", "DS", "IP",                   // 16-20
};

const QMap<Token::Type, QString> Token::sm_mnemonics_A = {
    { MOV,            "MOV" },
    { PUSH,           "PUSH" },
    { POP,            "POP" },
    { XCHG,           "XCHG" },
    { XLAT,           "XLAT" },
    { LEA,            "LEA" },
    { LDS,            "LDS" },
    { LES,            "LES" },
    { LAHF,           "LAHF" },
    { SAHF,           "SAHF" },
    { PUSHF,          "PUSHF" },
    { POPF,           "POPF" },
    { IN,             "IN" },
    { OUT,            "OUT" },
    { ADD,            "ADD" },
    { ADC,            "ADC" },
    { INC,            "INC" },
    { SUB,            "SUB" },
    { SBB,            "SBB" },
    { DEC,            "DEC" },
    { NEG,            "NEG" },
    { CMP,            "CMP" },
    { MUL,            "MUL" },
    { IMUL,           "IMUL" },
    { DIV,            "DIV" },
    { IDIV,           "IDIV" },
    { CBW,            "CBW" },
    { CWD,            "CWD" },
    { AAA,            "AAA" },
    { DAA,            "DAA" },
    { AAS,            "AAS" },
    { DAS,            "DAS" },
    { AAM,            "AAM" },
    { AAD,            "AAD" },
    { AND,            "AND" },
    { OR,             "OR" },
    { XOR,            "XOR" },
    { NOT,            "NOT" },
    { TEST,           "TEST" },
    { SAL,            "SAL" },
    { SAR,            "SAR" },
    { SHL,            "SHL" },
    { SHR,            "SHR" },
    { ROL,            "ROL" },
    { ROR,            "ROR" },
    { RCL,            "RCL" },
    { RCR,            "RCR" },
    { MOVSB,          "MOVSB" },
    { MOVSW,          "MOVSW" },
    { CMPSB,          "CMPSB" },
    { CMPSW,          "CMPSW" },
    { SCASB,          "SCASB" },
    { SCASW,          "SCASW" },
    { LODSB,          "LODSB" },
    { LODSW,          "LODSW" },
    { STOSB,          "STOSB" },
    { STOSW,          "STOSW" },
    { REP,            "REP" },
    { REPE,           "REPE" },
    { REPZ,           "REPZ" },
    { REPNE,          "REPNE" },
    { REPNZ,          "REPNZ" },
    { CALL,           "CALL" },
    { RET,            "RET" },
    { JMP,            "JMP" },
    { JA,             "JA" },
    { JNBE,           "JNBE" },
    { JAE,            "JAE" },
    { JNB,            "JNB" },
    { JB,             "JB" },
    { JNAE,           "JNAE" },
    { JBE,            "JBE" },
    { JNA,            "JNA" },
    { JC,             "JC" },
    { JNC,            "JNC" },
    { JE,             "JE" },
    { JZ,             "JZ" },
    { JNE,            "JNE" },
    { JNZ,            "JNZ" },
    { JG,             "JG" },
    { JNLE,           "JNLE" },
    { JGE,            "JGE" },
    { JNL,            "JNL" },
    { JL,             "JL" },
    { JNGE,           "JNGE" },
    { JLE,            "JLE" },
    { JNG,            "JNG" },
    { JO,             "JO" },
    { JNO,            "JNO" },
    { JNP,            "JNP" },
    { JPO,            "JPO" },
    { JP,             "JP" },
    { JPE,            "JPE" },
    { JNS,            "JNS" },
    { JS,             "JS" },
    { LOOP,           "LOOP" },
    { LOOPE,          "LOOPE" },
    { LOOPZ,          "LOOPZ" },
    { LOOPNE,         "LOOPNE" },
    { LOOPNZ,         "LOOPNZ" },
    { JCXZ,           "JCXZ" },
    { INT,            "INT" },
    { INTO,           "INTO" },
    { IRET,           "IRET" },
    { CLC,            "CLC" },
    { STC,            "STC" },
    { CMC,            "CMC" },
    { CLD,            "CLD" },
    { STD,            "STD" },
    { CLI,            "CLI" },
    { STI,            "STI" },
    { WAIT,           "WAIT" },
    { ESC,            "ESC" },
    { LOCK,           "LOCK" },
    { HLT,            "HLT" },
    { NOP,            "NOP" },

    { INCLUDE,        "INCLUDE" },
    { ORG,            "ORG" },
    { EQU,            "EQU" },
    { DB,             "DB" },
    { DW,             "DW" },
    { DD,             "DD" },
    { DQ,             "DQ" },
    { DT,             "DT" },
};

const QMap<QString, Token::Type> Token::sm_mnemonics_B = {
    { "MOV",                MOV },
    { "PUSH",               PUSH },
    { "POP",                POP },
    { "XCHG",               XCHG },
    { "XLAT",               XLAT },
    { "LEA",                LEA },
    { "LDS",                LDS },
    { "LES",                LES },
    { "LAHF",               LAHF },
    { "SAHF",               SAHF },
    { "PUSHF",              PUSHF },
    { "POPF",               POPF },
    { "IN",                 IN },
    { "OUT",                OUT },
    { "ADD",                ADD },
    { "ADC",                ADC },
    { "INC",                INC },
    { "SUB",                SUB },
    { "SBB",                SBB },
    { "DEC",                DEC },
    { "NEG",                NEG },
    { "CMP",                CMP },
    { "MUL",                MUL },
    { "IMUL",               IMUL },
    { "DIV",                DIV },
    { "IDIV",               IDIV },
    { "CBW",                CBW },
    { "CWD",                CWD },
    { "AAA",                AAA },
    { "DAA",                DAA },
    { "AAS",                AAS },
    { "DAS",                DAS },
    { "AAM",                AAM },
    { "AAD",                AAD },
    { "AND",                AND },
    { "OR",                 OR },
    { "XOR",                XOR },
    { "NOT",                NOT },
    { "TEST",               TEST },
    { "SAL",                SAL },
    { "SAR",                SAR },
    { "SHL",                SHL },
    { "SHR",                SHR },
    { "ROL",                ROL },
    { "ROR",                ROR },
    { "RCL",                RCL },
    { "RCR",                RCR },
    { "MOVSB",              MOVSB },
    { "MOVSW",              MOVSW },
    { "CMPSB",              CMPSB },
    { "CMPSW",              CMPSW },
    { "SCASB",              SCASB },
    { "SCASW",              SCASW },
    { "LODSB",              LODSB },
    { "LODSW",              LODSW },
    { "STOSB",              STOSB },
    { "STOSW",              STOSW },
    { "REP",                REP },
    { "REPE",               REPE },
    { "REPZ",               REPZ },
    { "REPNE",              REPNE },
    { "REPNZ",              REPNZ },
    { "CALL",               CALL },
    { "RET",                RET },
    { "JMP",                JMP },
    { "JA",                 JA },
    { "JNBE",               JNBE },
    { "JAE",                JAE },
    { "JNB",                JNB },
    { "JB",                 JB },
    { "JNAE",               JNAE },
    { "JBE",                JBE },
    { "JNA",                JNA },
    { "JC",                 JC },
    { "JNC",                JNC },
    { "JE",                 JE },
    { "JZ",                 JZ },
    { "JNE",                JNE },
    { "JNZ",                JNZ },
    { "JG",                 JG },
    { "JNLE",               JNLE },
    { "JGE",                JGE },
    { "JNL",                JNL },
    { "JL",                 JL },
    { "JNGE",               JNGE },
    { "JLE",                JLE },
    { "JNG",                JNG },
    { "JO",                 JO },
    { "JNO",                JNO },
    { "JNP",                JNP },
    { "JPO",                JPO },
    { "JP",                 JP },
    { "JPE",                JPE },
    { "JNS",                JNS },
    { "JS",                 JS },
    { "LOOP",               LOOP },
    { "LOOPE",              LOOPE },
    { "LOOPZ",              LOOPZ },
    { "LOOPNE",             LOOPNE },
    { "LOOPNZ",             LOOPNZ },
    { "JCXZ",               JCXZ },
    { "INT",                INT },
    { "INTO",               INTO },
    { "IRET",               IRET },
    { "CLC",                CLC },
    { "STC",                STC },
    { "CMC",                CMC },
    { "CLD",                CLD },
    { "STD",                STD },
    { "CLI",                CLI },
    { "STI",                STI },
    { "WAIT",               WAIT },
    { "ESC",                ESC },
    { "LOCK",               LOCK },
    { "HLT",                HLT },
    { "NOP",                NOP },

    { "INCLUDE",            INCLUDE },
    { "ORG",                ORG },
    { "EQU",                EQU },
    { "DB",                 DB },
    { "DW",                 DW },
    { "DD",                 DD },
    { "DQ",                 DQ },
    { "DT",                 DT },
};
